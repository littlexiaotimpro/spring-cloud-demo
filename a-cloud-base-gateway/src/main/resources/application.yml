server:
  port: 9002

spring:
  application:
    name: cloud-base-gateway
  cloud:
    # 网关路由配置
    gateway:
      discovery:
        locator:
          # 默认值为 true，即默认开启从注册中心动态创建路由的功能，利用微服务名进行路由
          enabled: true
      routes:
        # 将cloud-payment-service提供的服务隐藏起来，不暴露给客户端，只给客户端暴露 API 网关的地址
        # 路由 id,没有固定规则，但唯一，建议与服务名对应
        - id: cloud-payment-service
          # 匹配后提供服务的路由地址，可以指定服务地址，如: http://localhost:8080，
          # 若启用服务发现，则可以配置注册中心的服务名称，通过服务发现获取服务地址
          uri: lb://cloud-payment-service
          predicates:
            #以下是断言条件，必选全部符合条件
            - Path=/**     # 断言，路径匹配
            - Method=GET,POST   # 允许通过的请求类型
            # 断言的完整的配置方式（查看 RoutePredicateFactory 接口实现，了解具体的参数配置）
            - name: After       # 允许在此配置时间之后的请求通过
              args:
                datetime: 2022-03-28T12:00:00.255+08:00[Asia/Shanghai]
          filters:
            # 过滤器的完整的配置方式（查看 GatewayFilterFactory 接口实现，了解具体的参数配置）
            #- RedirectTo=302, http://localhost:9002  # 重定向，status必须是3xx
            - PrefixPath=/payment # 在请求路径上增加一个前缀 /payment
            # 熔断，可选 Hystrix、CircuitBreaker
            - name: Hystrix
              args:
                name: fetchIngredients
                fallbackUri: forward:/fallback # 访问的是当前网关服务的 /fallback
            # 限流
            - name: RequestRateLimiter
              args:
                # 限流过滤器的Bean名称
                key-resolver: '#{@uriKeyResolver}'
                # 允许用户每秒处理多少请求
                redis-rate-limiter.replenishRate: 5
                # 允许1s内完成的最大请求数
                redis-rate-limiter.burstCapacity: 3

# 针对全局配置
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 3000
    # 对单独的 Hystrix 的 commandKey 设置超时时间
    fetchIngredients:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000

eureka:
  client:
    # 将当前服务注册进Eureka服务注册中心，默认为 true
    register-with-eureka: true
    # 是否从 Eureka Server 抓取已有的注册服务，默认为 true（ps：单节点无所谓，汲取必须设置为true才能配合ribbon使用负载均衡）。
    fetchRegistry: true
    serviceUrl:
      # 集群部署
      defaultZone: http://server7001.com:7001/eureka/
  instance:
    instance-id: gateway9002
    prefer-ip-address: true