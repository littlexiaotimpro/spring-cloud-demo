spring:
  application:
    name: cloud-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource # 配置数据源类型
    driver-class-name: com.mysql.cj.jdbc.Driver  # 配置数据库驱动
    url: jdbc:mysql://localhost:3306/cloud_demo?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456

eureka:
  client:
    # 将当前服务注册进Eureka服务注册中心，默认为 true
    register-with-eureka: true
    # 是否从 Eureka Server 抓取已有的注册服务，默认为 true（ps：单节点无所谓，汲取必须设置为true才能配合ribbon使用负载均衡）。
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://server7001.com:7001/eureka/,http://server7002.com:7002/eureka/,http://server7003.com:7003/eureka/
  instance:
    # 访问路径可以显示 IP 地址
    prefer-ip-address: true
    # Eureka 客户端向服务器发送心跳的间隔时间，单位秒，默认是 30s
    lease-renewal-interval-in-seconds: 30
    # Eureka 服务端在收到最后一次心跳后等待时间上限，单位秒，默认为 90s，超时则清除服务
    lease-expiration-duration-in-seconds: 90

mybatis:
  mapperLocations: classpath:mapper/*.xml # Mybatis 映射文件的扫描路径
  type-aliases-package: com.spring.cloud.common.api.entity # 映射文件对应的映射实体路径

# 多环境服务配置
# 8001 服务
---
# 指定服务端口
server:
  port: 8001

spring:
  # 实例名称
  profiles: service8001

eureka:
  # 指定服务实例名称
  instance:
    instance-id: payment8001

# 8002 服务
---
server:
  port: 8002

spring:
  profiles: service8002

eureka:
  instance:
    instance-id: payment8002